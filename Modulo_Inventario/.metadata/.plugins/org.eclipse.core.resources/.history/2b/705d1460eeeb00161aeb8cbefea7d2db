package Vista;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.util.Vector;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;

import Modelo.Producto;
import Persistencia.BDProducto;

@SuppressWarnings("serial")
public class Pantalla_Consulta_Producto extends JFrame{
		
		public ImageIcon ico_aplicacion;
		public JTable jtbl_topten;
		public JScrollPane scroll_topten; 
		public JTable table;
		MiTablaModelo miModelo;
		
		public Pantalla_Consulta_Producto(){
			
			super("Consulta de Productos");

	        
	    	miModelo  =new MiTablaModelo();
	    	table = new JTable(miModelo);
	        table.setPreferredScrollableViewportSize(new Dimension(500, 600));
	        
	        crearTable(); //crea la tabla
	               

	        //Icono de la Aplicacion
			ico_aplicacion = new ImageIcon("src/Imagenes/icono.gif");
			setIconImage(ico_aplicacion.getImage());

	        JScrollPane scrollPane = new JScrollPane(table);
	        getContentPane().add(scrollPane, BorderLayout.CENTER);
	        pack();

	    }
		
	    
		class MiTablaModelo extends AbstractTableModel {
	    	
	    	String[] nombreColumnas = {"Jugador", "Juego", "Puntuacion"};// Para aumentar si quiere mas
	       	Vector <Object[]> fuenteDeDatos;
	       	
	       	
	       	public MiTablaModelo() {
	       		
	       		fuenteDeDatos = new Vector<Object[]>();
	       			    		
	    		}

	       	
	       	////////////////////////////////////////////////////////////////////////////////
	       	//Para llenar la tabla
	       public void addDatos (String jugador, String juego, String puntos){// Para aumentar si quiere mas
	    	   
	       	
	       		Object [] auxSgte = {jugador, juego, puntos}; 		
	    	    	fuenteDeDatos.addElement(auxSgte);
	    		
	       	
	       }
	    	////////////////////////////////////////////////////////////////////////////////
	      	//fin llenar la tabla
	       public String getColumnName(int col) {
	           return nombreColumnas[col];
	       }
	      
	       public int getColumnCount() {
	           return nombreColumnas.length;
	       }    

	    	//@Override
	    	public int getRowCount() {
	    		return fuenteDeDatos.size();
	    		
	    	}

	    	//@Override
	    	public Object getValueAt(int row, int col) {
	       	Object [] aux =  (Object[]) fuenteDeDatos.elementAt(row);
	       	return ( aux [col]);
	       }
	    	
	    	 public void setValueAt(Object value, int row, int col) {
	           	fuenteDeDatos.elementAt(row)[col] = value;
	           }


	    	 public Class<?> getColumnClass(int c) {
	               return getValueAt(0, c).getClass();
	           }
	    //	
	    }

}
