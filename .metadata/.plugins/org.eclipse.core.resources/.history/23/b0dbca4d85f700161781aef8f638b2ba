package modelo_clases;

import java.sql.CallableStatement;
import java.sql.SQLException;
import java.util.ArrayList;

import com.mysql.jdbc.ResultSet;

import DBClases.ConexionDB;

public class Sucursal {
	
	private String nombre;
	private String direccion;
	private String ciudad;
	public String estado;
		
	String sentencia;
	CallableStatement procedure;
	ResultSet result = null;
	ConexionDB conexion;
	
	
	public Sucursal(String nombre, String direccion, String ciudad, String estado) {
		super();
		this.setNombre(nombre);
		this.setDireccion(direccion);
		this.setCiudad(ciudad);
		this.setEstado(estado);
	}


	public String getCiudad() {
		return ciudad;
	}


	public void setCiudad(String ciudad) {
		this.ciudad = ciudad;
	}


	public String getNombre() {
		return nombre;
	}


	public void setNombre(String nombre) {
		this.nombre = nombre;
	}


	public String getDireccion() {
		return direccion;
	}


	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}


	public String getEstado() {
		return estado;
	}


	public void setEstado(String estado) {
		this.estado = estado;
	}
	
	
	
	//metodos de sucursal
	

	public void ingresarSucursal(Sucursal sucursal){
		conexion = new ConexionDB();
		conexion.conectar();
		try {
			String sentencia = "call ingresarsucursal(?,?,?)";
			CallableStatement procedure = conexion.conn.prepareCall(sentencia);
			procedure.setString(1, sucursal.getNombre());
			procedure.setString(2, sucursal.getDireccion());
			procedure.setString(3, sucursal.getCiudad());
			procedure.execute();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		conexion.cerrarConexion();
	}
	
	public ArrayList<Sucursal> listaSucursales(){
		 ArrayList<Sucursal> lista = new ArrayList<>();
		 conexion = new ConexionDB();
		 conexion.conectar();
			try {
				sentencia = "call consultar_todos_locales()";
				procedure = conexion.conn.prepareCall(sentencia);
				procedure.execute();
				result = (ResultSet) procedure.executeQuery();
				 while (result.next()) {
					 Sucursal cliente = new Cliente();
					 cliente.setNombre(result.getString("nombre"));
					 cliente.setApellido(result.getString("apellido"));
					 cliente.setCedula(result.getString("cedula"));
					 cliente.setTelefono(result.getString("telefono"));
					 cliente.setCorreo(result.getString("correo"));
					 cliente.setDireccion(result.getString("direccion"));
					 cliente.setTipo(result.getString("tipo"));
					 cliente.setEstado(result.getString("estado"));
					 if (cliente.getNombre() != null) {
						 lista.add(cliente);
					}
	             }
				procedure.close();
				conexion.cerrarConexion();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		 return lista;
	}
	
	public Cliente obtenerClientexNombre (String nombre){
		Cliente cliente = new Cliente();
		conexion.conectar();
		try {
			sentencia = "call consultar_cliente_nombre(?)";
			procedure = conexion.conn.prepareCall(sentencia);
			procedure.setString(1, nombre);
			procedure.execute();
			result = (ResultSet) procedure.executeQuery();
			while (result.next()) {
				 cliente.setNombre(result.getString("nombre"));
				 cliente.setApellido(result.getString("apellido"));
				 cliente.setCedula(result.getString("cedula"));
				 cliente.setTelefono(result.getString("telefono"));
				 cliente.setCorreo(result.getString("correo"));
				 cliente.setDireccion(result.getString("direccion"));
				 cliente.setTipo(result.getString("tipo"));
				 cliente.setEstado(result.getString("estado"));
            }
			procedure.close();
			conexion.cerrarConexion();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return cliente; 
	 }

	public void modificarCliente(String term, Cliente cliente){
		 conexion.conectar();
			try {
				sentencia = "call modificarcliente(?,?,?,?,?,?,?,?,?)";
				procedure = conexion.conn.prepareCall(sentencia);
				procedure.setString(1, term);
				procedure.setString(2, cliente.getNombre());
				procedure.setString(3, cliente.getApellido());
				procedure.setString(4, cliente.getCedula());
				procedure.setString(5, cliente.getTelefono());
				procedure.setString(6, cliente.getCorreo());
				procedure.setString(7, cliente.getDireccion());
				procedure.setString(8, cliente.getTipo());
				procedure.setString(9, cliente.getEstado());
				procedure.execute();
				procedure.close();
				conexion.cerrarConexion();
			} catch (SQLException e) {
				e.printStackTrace();
			}
	 }
	 
	 
	 public ArrayList<Cliente> listaClientexNombre(String nombre){
		 ArrayList<Cliente> lista = new ArrayList<>();
		 conexion = new ConexionDB();
		 conexion.conectar();
			try {
				sentencia = "call consultar_cliente_nombre(?)";
				procedure = conexion.conn.prepareCall(sentencia);
				procedure.setString(1, nombre);
				procedure.execute();
				result = (ResultSet) procedure.executeQuery();
				while (result.next()) {
					Cliente cliente = new Cliente();
					cliente.setNombre(result.getString("nombre"));
					 cliente.setApellido(result.getString("apellido"));
					 cliente.setCedula(result.getString("cedula"));
					 cliente.setTelefono(result.getString("telefono"));
					 cliente.setCorreo(result.getString("correo"));
					 cliente.setDireccion(result.getString("direccion"));
					 cliente.setTipo(result.getString("tipo"));
					 cliente.setEstado(result.getString("estado"));
					if (cliente.getNombre() != null) {
						lista.add(cliente);
					}
	             }
				procedure.close();
				conexion.cerrarConexion();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		 return lista;
	 }
	 
	 public ArrayList<Cliente> listaClientesxApellido(String apellido){
		 ArrayList<Cliente> lista = new ArrayList<>();
		 conexion = new ConexionDB();
		 conexion.conectar();
			try {
				sentencia = "call consultar_cliente_apellido(?)";
				procedure = conexion.conn.prepareCall(sentencia);
				procedure.setString(1, apellido);
				procedure.execute();
				result = (ResultSet) procedure.executeQuery();
				while (result.next()) {
					Cliente cliente = new Cliente();
					cliente.setNombre(result.getString("nombre"));
					 cliente.setApellido(result.getString("apellido"));
					 cliente.setCedula(result.getString("cedula"));
					 cliente.setTelefono(result.getString("telefono"));
					 cliente.setCorreo(result.getString("correo"));
					 cliente.setDireccion(result.getString("direccion"));
					 cliente.setTipo(result.getString("tipo"));
					 cliente.setEstado(result.getString("estado"));
					if (cliente.getNombre() != null) {
						lista.add(cliente);
					}
	             }
				procedure.close();
				conexion.cerrarConexion();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		 return lista;
	 }
	
	 public ArrayList<Cliente> listaClientesxCedula(String cedula){
		 ArrayList<Cliente> lista = new ArrayList<>();
		 conexion = new ConexionDB();
		 conexion.conectar();
			try {
				sentencia = "call consultar_cliente_cedula(?)";
				procedure = conexion.conn.prepareCall(sentencia);
				procedure.setString(1, cedula);
				procedure.execute();
				result = (ResultSet) procedure.executeQuery();
				while (result.next()) {
					Cliente cliente = new Cliente();
					cliente.setNombre(result.getString("nombre"));
					 cliente.setApellido(result.getString("apellido"));
					 cliente.setCedula(result.getString("cedula"));
					 cliente.setTelefono(result.getString("telefono"));
					 cliente.setCorreo(result.getString("correo"));
					 cliente.setDireccion(result.getString("direccion"));
					 cliente.setTipo(result.getString("tipo"));
					 cliente.setEstado(result.getString("estado"));
					if (cliente.getNombre() != null) {
						lista.add(cliente);
					}
	             }
				procedure.close();
				conexion.cerrarConexion();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		 return lista;
	 }
}
