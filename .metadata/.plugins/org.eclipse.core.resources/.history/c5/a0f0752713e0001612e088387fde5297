package Modelo.Campeonato;

import java.util.Vector;

import javax.swing.ImageIcon;
import javax.swing.JButton;

import MonroyRobelly.Modelo.Barajas.Baraja;
import MonroyRobelly.Modelo.Barajas.Carta;
import MonroyRobelly.Vista.PanelDeMesaJuego;
import MonroyRobelly.Vista.Panel_Barajas;


public class Mano {
	
	public static final int MAX=5;
	
	private Vector <Carta> manoDeCartas = new Vector<Carta> (MAX);
	
	
	//******************************************************************
	//**********************CONSTRUCTORES*******************************
	//******************************************************************
	public Mano() {
		super();
	}
	
	public Mano(Vector<Carta> manoDeCartas) 
	{
		super();
		this.setManoDeCartas(manoDeCartas);
	}
	//************************************************************************
	//**********************GETTERS AND SETTERS*******************************
	//************************************************************************
	public Vector<Carta> getManoDeCartas() {
		return manoDeCartas;
	}
	
	public void setManoDeCartas(Vector<Carta> mano) {
		this.manoDeCartas = mano;
	}
	
	//****************************************************************
	//**********************OPERACIONES*******************************
	//****************************************************************
	
	public void mostrarMano(){
		if (manoDeCartas != null) {
			for (int i = 0; i < manoDeCartas.size(); i++) {
				manoDeCartas.get(i).mostrarCarta();
			}
		}else{
			System.out.println("Esta mano esta vacia");
		}
		
	}
	public void asignarCarta(Carta cartaRecibida) {
		manoDeCartas.add(cartaRecibida);
				
	}
	public int sumarCartas(){
		int total=0;
		for (int i = 0; i < manoDeCartas.size(); i++) {
			total += manoDeCartas.get(i).getNumero();
		}
		return total;
		
	}
	public int cartaMasAlta(){
		int max = 0;
		for (int i = 0; i < manoDeCartas.size(); i++) {
			if (manoDeCartas.get(i).getNumero() > max ) {
				max = manoDeCartas.get(i).getNumero();
			}
		}
		return max;
	}
	
	public boolean buscarCarta(int numero, String figura , String color){
		boolean cartaEncontrada = false;
		Carta tmp = new Carta(numero,figura,color);
		for (int i = 0; i < manoDeCartas.size(); i++) {
			if (manoDeCartas.get(i).getNumero() == numero && manoDeCartas.get(i).getFigura() == figura && manoDeCartas.get(i).getColor() == color) {
				cartaEncontrada = true;
				break;
			}
		
		}
		return cartaEncontrada;
	}
	
	public void intercambiarCarta (Baraja baraja){
		
		manoDeCartas.remove(manoDeCartas.get(0));
		manoDeCartas.add(baraja.cogerCarta(0));
		
	}	
}
